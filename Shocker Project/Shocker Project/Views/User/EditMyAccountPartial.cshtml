@model Shocker_Project.ViewModels.UserViewModel
@*@model Shocker_Project.Models.Users*@
@section Styles
	{
	<style>
		thead {
			background-color: pink;
			color: mediumvioletred;
		}
	</style>
}
@*<div id="app" class="container">
	<div class="form-group">
		<table class="table table-striped table table-hover">
			<thead>
				<tr>
					<td>帳號名</td>
					<td>密碼</td>
					<td>姓名</td>
					<td>性別</td>
					<td>生日</td>
					<td>email</td>
					<td>手機</td>
					<td>身分</td>
					<td>註冊日期</td>
				</tr>
			</thead>
			<tbody>
				<tr>
				<tr v-for="item in Users">
					<template v-if="item.Edit==true">
						<td>
							<button class="btn btn-success" @@click="update">修改</button>
							<button class="btn btn-warning" @@click="cancel">取消</button>
						<td>{{item.account}}/></td>
						<td><input v-model="item.password" /></td>
						<td><input v-model="item.name" /></td>
						<td><input v-model="item.gender" /></td>
						<td><input v-model="item.birthDate" /></td>
						<td><input v-model="item.email" /></td>
						<td><input v-model="item.phone" /></td>
						<td><input v-model="item.role" /></td>
						<td><input v-model="item.registerDate" /></td>
					</template>
					<template v-else>
						<td><button class="btn btn-primary" @@click="edit(item.employeeid)">編輯</button>
						{{item.account}}</td>
						<td>{{item.password}}</td>
						<td>{{item.name}}<td>
						<td>{{item.gender}}</td>
						<td>{{item.birthDate}}</td>
						<td>{{item.email}}</td>
						<td>{{item.phone}}</td>
						<td>{{item.role}}</td>
						<td>{{item.registerDate}}</td>
					</template>
				</tr>
			</tbody>
		</table>
	</div>
	<div class="form-group">
	</div>
</div>*@


<div id="app" class="container">
	<template v-if="Edit==true">

	</template>
	<template v-else>

		<div class="mb-3 row">
			<label for="staticAccount" class="col-sm-2 col-form-label">帳號</label>
			<div class="col-sm-6">
				<input type="text" readonly class="form-control-plaintext" id="staticAccount" v-model="account">
			</div>
		</div>

		<div class="mb-3 row">
			<label for="inputPassword" class="col-sm-2 col-form-label">密碼</label>
			<div class="col-sm-10">
				<input type="text" class="form-control" id="inputPassword" v-model="password">@*要屏蔽將input改為type="password"*@
			</div>
		</div>

		<div class="mb-3 row">
			<label for="inputName" class="col-sm-2 col-form-label">名字</label>
			<div class="col-sm-10">
				<input type="text" class="form-control" id="inputName" v-model="name">
			</div>		
		</div>

		<div class="mb-3 row">
			<label for="inputGender" class="col-sm-2 col-form-label">性別</label>
			<div class="col-sm-10">
				<input type="text" class="form-control" id="inputGender" v-model="gender">
			</div>		
		</div>

		<div class="mb-3 row">
			<label for="inputBirthDate" class="col-sm-2 col-form-label">生日</label>
			<div class="col-sm-10">
				<input type="text" class="form-control" id="inputBirthDate" v-model="birthDate">
			</div>
		</div>

		<div class="mb-3 row">
			<label for="inputEmail" class="col-sm-2 col-form-label">郵件</label>
			<div class="col-sm-10">
				<input type="text" class="form-control" id="inputEmail" v-model="email">
			</div>
		</div>

		<div class="mb-3 row">
			<label for="staticPhone" class="col-sm-2 col-form-label">手機</label>
			<div class="col-sm-6">
				<input type="text" readonly class="form-control-plaintext" id="staticPhone" v-model="phone">
			</div>
		</div>

		<div class="mb-3 row">
			<label for="staticRole" class="col-sm-2 col-form-label">身分</label>
			<div class="col-sm-6">
				<input type="text" readonly class="form-control-plaintext" id="staticRole" v-model="role">
			</div>
		</div>

		<div class="mb-3 row">
			<label for="staticRegisterDate" class="col-sm-2 col-form-label">帳號創辦時間</label>
			<div class="col-sm-6">
				<input type="text" readonly class="form-control-plaintext" id="staticRegisterDate" v-model="registerDate">
			</div>
		</div>

		<div class="row">
			<div class="col-sm-3">
				<button type="button" class="btn btn-outline-success" @@click="update">完成</button>
			</div>
			<div class="col-sm-3">
				<button type="button" class="btn btn-outline-danger">取消</button>
			</div>
		</div>

	</template>

</div>


<script src="https://cdn.jsdelivr.net/npm/vue@2.7.14"></script>
<script src="~/axios/axios.min.js"></script>
<script>
	var baseAddress = "https://localhost:7033/User";
	var vueApp = new Vue({
		el: '#app',
		data: {
			Users: [],
			account: "",
			password: "",
			name: "",
			gender: "",
			birthDate: "",
			email: "",
			phone: "",
			role: "",
			registerDate: "",
			Edit: false
		},
		mounted: function () {
			let _this = this;
			_this.getUsers("Admin1"); @*要跟登入驗證那裡做連結*@
			},
		methods: {
			getUsers: function (account) {
				alert("getUsers")
				//request.Account = isEmpty(login.userAccount) ? -1 : login.userAccount;
				axios.get(`${baseAddress}/GetAccount`).then(response => {
					alert(response.data);
					this.Users = response.data;
					for (var i = 0; i < this.Users.length; i++) {
						if (this.Users[i].account == account) {
							this.account = this.Users[i].account;
							this.password = this.Users[i].password;
							this.name = this.Users[i].name;
							this.gender = this.Users[i].gender;
							this.birthDate = this.Users[i].birthDate;
							this.email = this.Users[i].email;
							this.phone = this.Users[i].phone;
							this.role = this.Users[i].role;
							this.registerDate = this.Users[i].registerDate;
						}
					}
				});
			},
			update: function () {
				var request = {
					Account: this.Users[i].account,
					Password:this.password,
					Name:this.name,
					Gender:this.gender,
					BirthDate:this.birthDate,
					Email:this.email
				};
				axios.post(`${baseAddress}/UpdateAccount`, request).then(response => {
					this.getUsers();
				});
			},
			//cancel: function () {
			//	let _this = this;
			//	var employeeList = [];
			//	for (var i = 0; i < _this.EmployeeDTOes.length; i++) {
			//		var item = _this.EmployeeDTOes[i];
			//		if (item.Edit == true) {
			//			item.Edit = false;
			//			item.firstName = _this.originFirstName;
			//			item.lastName = _this.originLastName;
			//			item.title = _this.originTitle;
			//		}
			//		employeeList.push(item);
			//	}
			//	_this.EmployeeDTOes = employeeList
			//},
			//edit: function (employeeId) {
			//	let _this = this;
			//	var employeeList = [];
			//	for (var i = 0; i < _this.EmployeeDTOes.length; i++) {
			//		var item = _this.EmployeeDTOes[i];
			//		if (employeeId == item.employeeId) {
			//			item.Edit = true;
			//			_this.originFirstName = item.firstName;
			//			_this.originLastName = item.lastName;
			//			_this.originTitle = item.title;
			//		};
			//		employeeList.push(item);
			//	};
			//	_this.EmployeeDTOes = employeeList;
			//},
			//deleteEmp: function (employeeId) {
			//	let _this = this;//this指的是Vue物件
			//	var ret = confirm("刪除要確捏?");
			//	if (ret == true) {
			//		axios.delete(`${baseAddress}api/Employees/${employeeId}`).then(response => {
			//			alert(response.data);
			//			_this.filterEmployeeDTOes();
			//		});
			//	}
			//},
			//showInsertPage: function () {
			//	$("#insertPage").modal('show');
			//},
			//insert: function () {
			//	let _this = this;
			//	var empDTO = {
			//		EmployeeId: 0,//因為要跟後端溝通，所以要寫EmployeeId這種頭大寫的DTO格式
			//		FirstName: _this.firstName,
			//		LastName: _this.lastName,
			//		Title: _this.title
			//	};
			//	axios.post(`${baseAddress}api/Employees`, empDTO).then(response => {
			//		alert(response.data);
			//		$("#insertPage").modal('hide');
			//		_this.filterEmployeeDTOes();
			//	});
			//}
		}//就像MVC的Controller
	});
</script>


