@*@model Shocker_Project.ViewModels.UserViewModel*@
@model Shocker_Project.Models.Users
@section Styles
	{
	<style>
		thead {
			background-color: pink;
			color: mediumvioletred;
		}
	</style>
}

<div id="app" class="container">
	<div class="form-group">
		<table class="table table-striped table table-hover">
			<thead>
				<tr>
					<td>空白</td>
					<td>帳號名</td>
					<td>密碼</td>
					<td>姓名</td>
					<td>性別</td>
					<td>生日</td>
					<td>email</td>
					<td>手機</td>
					<td>身分</td>
					<td>註冊日期</td>
				</tr>
			</thead>
			<tbody>
				<tr v-for="item in Users">
					<template v-if="item.Edit==true">
						<td>
							<button class="btn btn-success" @@click="update">修改</button>
							<button class="btn btn-warning" @@click="cancel">取消</button>
						</td>
						<td><input v-model="item.account" /></td>
						<td><input v-model="item.password" /></td>
						<td><input v-model="item.name" /></td>
						<td><input v-model="item.gender" /></td>
						<td><input v-model="item.birthdate" /></td>
						<td><input v-model="item.email" /></td>
						<td><input v-model="item.phone" /></td>
						<td><input v-model="item.role" /></td>
						<td><input v-model="item.registerDate" /></td>
					</template>
					<template v-else>
						<td><button class="btn btn-primary" @@click="edit(item.employeeid)">編輯</button></td>
						<td>{{item.account}}</td>
						<td>{{item.password}}</td>
						<td>{{item.name}}<tdi>
						<td>{{item.gender}}</td>
						<td>{{item.birthdate}}</td>
						<td>{{item.email}}</td>
						<td>{{item.phone}}</td>
						<td>{{item.role}}</td>
						<td>{{item.registerDate}}</td>
					</template>
				</tr>
			</tbody>
		</table>
	</div>
	<div class="form-group">
	</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/vue@2.7.14"></script>
<script src="~/axios/axios.min.js"></script>
<script>
	var baseAddress = "https://localhost:7033/User";
	var vueApp = new Vue({
		el: '#app',
		data() {
			return {
				Users: [],
				account: "",
				password: "",
				name: "",
				gender: "",
				birthDate: "",
				email: "",
				phone: "",
				role: "",
				registerDate: "",
				Edit: false
			};
		},
		mounted: function () {
			let _this = this;
			_this.getUsers("Admin1");
		},
		methods: {
			getUsers: function (account) {
				alert("getUsers")
				let _this = this;
				//request.Account = isEmpty(login.userAccount) ? -1 : login.userAccount;
				axios.get(`${baseAddress}/MyAccountInformation`).then(response => {
					alert(response.data);
					var item = _this.Users = response.data;
					for (var i = 0; i < _this.Users.length; i++) {
						if (item.account == account) {
							_this.account = item.account;
							_this.password = item.password;
							_this.name = item.name;
							_this.gender = item.gender;
							_this.birthDate = item.birthDate;
							_this.email = item.email;
							_this.phone = item.phone;
							_this.role = item.role;
							_this.registerDate = item.registerDate;
						}
					}
				});
			},
			//update: function (item) {
			//	let _this = this;
			//	var request = {
			//		EmployeeId: item.employeeId,//因為要跟後端溝通，所以要寫EmployeeId這種頭大寫的DTO格式
			//		FirstName: item.firstName,
			//		LastName: item.lastName,
			//		Title: item.title
			//	};//item.employeeId,item.firstName...可用key:value的寫法
			//	axios.put(`${baseAddress}api/Employees/${item.employeeId}`, request).then(response => {

			//		_this.cancel();//呼叫樓下的cancel函式
			//		_this.filterEmployeeDTOes();//呼叫filterEmployeeDTOes函式
			//	});
			//},
			//cancel: function () {
			//	let _this = this;
			//	var employeeList = [];
			//	for (var i = 0; i < _this.EmployeeDTOes.length; i++) {
			//		var item = _this.EmployeeDTOes[i];
			//		if (item.Edit == true) {
			//			item.Edit = false;
			//			item.firstName = _this.originFirstName;
			//			item.lastName = _this.originLastName;
			//			item.title = _this.originTitle;
			//		}
			//		employeeList.push(item);
			//	}
			//	_this.EmployeeDTOes = employeeList
			//},
			//edit: function (employeeId) {
			//	let _this = this;
			//	var employeeList = [];
			//	for (var i = 0; i < _this.EmployeeDTOes.length; i++) {
			//		var item = _this.EmployeeDTOes[i];
			//		if (employeeId == item.employeeId) {
			//			item.Edit = true;
			//			_this.originFirstName = item.firstName;
			//			_this.originLastName = item.lastName;
			//			_this.originTitle = item.title;
			//		};
			//		employeeList.push(item);
			//	};
			//	_this.EmployeeDTOes = employeeList;
			//},
			//deleteEmp: function (employeeId) {
			//	let _this = this;//this指的是Vue物件
			//	var ret = confirm("刪除要確捏?");
			//	if (ret == true) {
			//		axios.delete(`${baseAddress}api/Employees/${employeeId}`).then(response => {
			//			alert(response.data);
			//			_this.filterEmployeeDTOes();
			//		});
			//	}
			//},
			//showInsertPage: function () {
			//	$("#insertPage").modal('show');
			//},
			//insert: function () {
			//	let _this = this;
			//	var empDTO = {
			//		EmployeeId: 0,//因為要跟後端溝通，所以要寫EmployeeId這種頭大寫的DTO格式
			//		FirstName: _this.firstName,
			//		LastName: _this.lastName,
			//		Title: _this.title
			//	};
			//	axios.post(`${baseAddress}api/Employees`, empDTO).then(response => {
			//		alert(response.data);
			//		$("#insertPage").modal('hide');
			//		_this.filterEmployeeDTOes();
			//	});
			//}
		}//就像MVC的Controller
	});
</script>


